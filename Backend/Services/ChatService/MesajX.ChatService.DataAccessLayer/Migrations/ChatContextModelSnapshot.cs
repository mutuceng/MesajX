// <auto-generated />
using System;
using MesajX.ChatService.DataAccessLayer.Concrete;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MesajX.ChatService.DataAccessLayer.Migrations
{
    [DbContext(typeof(ChatContext))]
    partial class ChatContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MesajX.ChatService.EntityLayer.Entities.DMGroup", b =>
                {
                    b.Property<string>("GroupId")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("GroupId");

                    b.ToTable("DMGroups");
                });

            modelBuilder.Entity("MesajX.ChatService.EntityLayer.Entities.GroupMember", b =>
                {
                    b.Property<string>("GroupMemberId")
                        .HasColumnType("text");

                    b.Property<string>("DMGroupGroupId")
                        .HasColumnType("text");

                    b.Property<string>("GroupId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TeamGroupGroupId")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("GroupMemberId");

                    b.HasIndex("DMGroupGroupId");

                    b.HasIndex("TeamGroupGroupId");

                    b.ToTable("GroupMembers");
                });

            modelBuilder.Entity("MesajX.ChatService.EntityLayer.Entities.Message", b =>
                {
                    b.Property<string>("MessageId")
                        .HasColumnType("text");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("GroupId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("IsRead")
                        .HasColumnType("integer");

                    b.Property<string>("MediaUrl")
                        .HasColumnType("text");

                    b.Property<DateTime>("SentAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("MessageId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("MesajX.ChatService.EntityLayer.Entities.TeamGroup", b =>
                {
                    b.Property<string>("GroupId")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("TeamGroupName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TeamGroupPhoto")
                        .HasColumnType("text");

                    b.HasKey("GroupId");

                    b.ToTable("TeamGroups");
                });

            modelBuilder.Entity("MesajX.ChatService.EntityLayer.Entities.GroupMember", b =>
                {
                    b.HasOne("MesajX.ChatService.EntityLayer.Entities.DMGroup", null)
                        .WithMany("GroupMembers")
                        .HasForeignKey("DMGroupGroupId");

                    b.HasOne("MesajX.ChatService.EntityLayer.Entities.TeamGroup", null)
                        .WithMany("GroupMembers")
                        .HasForeignKey("TeamGroupGroupId");
                });

            modelBuilder.Entity("MesajX.ChatService.EntityLayer.Entities.DMGroup", b =>
                {
                    b.Navigation("GroupMembers");
                });

            modelBuilder.Entity("MesajX.ChatService.EntityLayer.Entities.TeamGroup", b =>
                {
                    b.Navigation("GroupMembers");
                });
#pragma warning restore 612, 618
        }
    }
}
